<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AADDDgAAww4AAAAAAAAAAAAAUFBQAlJSUgNSUlIDUlJSA1JSUgNSUlIDUlJSA1VVVAI5O0AGJy48GScw
        Qx4oL0EeIzNNHiEzTh4nLj0bMjU8CFJSUgNUVFQDVFRUA1RUVANUVFQDVFRUA1RUVAN9c10CKTNIGzpg
        tKA/asjGPWzLxEBUj8RBSXvGOmG3qyo6WyxSUlIDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDloZvAS02
        QSJEbLTQVFmP/1xNj/93NFP/bUBy/0F04N8sP2k5UlJSA1ticwJygbsBcYC3AXGCuwFjbo0BVFZYAwAA
        AABKSxogs7kbz7OoHf+sKXT/tCVG/4J1UP9Sd6feLDxcOFVRTAZSTUA8UU0/XVFNP1xRTT9dUU0/TlVP
        RhJSTEE6T0wzcdLSBeDu8wf/pYdu/5tOiv+vlC//wMMP3lxeGzhcRDkNSVtPnj9xafg/cWv2QG9o90Vl
        XdVZQTVQTFdMqz5vY/nGxAj9yOMd/0K5rf+Tonz/yMIX/9jYBt5vbxE5W0dBDUtVRaQ7dF3/OHph/zh4
        YP85dl35O3RY3zpzWfE3dFn/pbUW/8jXD/9zrUT/lK4p/9nhB//KzAbYY2IUNGA+PQ1GXkmlH6l+/y6T
        bf9Ne1j/OoZi/yWfd/9HfVv/RntY/zCTYv9OeUj/YXA8/0CKU/8woGb/T2E3rU4/JxVcSUcITVJCgiqR
        bflOelf/xpxR/3Z5Tf8zgGH/qoxN/6WJTf8vg2T/en1Q/8WdU/9Kflv/KpFu90xQQnxeSEsHWFtiA1VH
        O1E1fmDrPIVi/3t8Tv9TeVb/K5Ft/254T/9sd0//KpNu/1V5Vf98fE7/OoZj/zZ8XuhWRjtNWFxkAllM
        SAtOTz+SNX5f9yyPbPkvhGT4Lopo+CuSbfgvhmb4L4Zm+CuSbfguimj4L4Rk+CyPbPk2fV73Tk8+jVlM
        SAlVUUsHUUw/Q09OPmZQTT5lT08/ZU9OP2VQTT5lT08/ZU9PP2VQTT5lT04/ZU9PP2VQTT5lT04/ZlFM
        PkBVUUwGUlJSA1tgbQJrao0Ba2eLAWtniwFrZ4sBa2eLAWtniwFrZ4sBa2eLAWtniwFrZ4sBa2eLAWtp
        jQFbX2wCUlJSA1JSUgNUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1JSUgNSUlIDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANSUlIDT09PAlJSUgNSUlIDUlJSA1JSUgNSUlIDUlJSA1JSUgNSUlIDUlJSA1JS
        UgNSUlIDUlJSA1JSUgNSUlIDUFBQAgAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAADDDgAAww4AAAAA
        AAAAAAAASUlJAk5OTgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5O
        TgJOTk4CTk5OAk5OTgJSUVACWVRJAmRXOgFkVTcBY1U3AWJUNgFiVDYBY1U3AWVZPgFlWj8BY1c7AWJV
        OAFiWUcBUVBOAk5OTgJOTk4CVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVlVVAzo8QgguLzIZKiwvISstMSIrLTEiKy0xIistMSIrLTEiLC82Ii0x
        OSIsLzMiKywvIistMR04OTwMR0dIAk5OTgJUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANbWFMDKSwzHyY6ZHcwTpCkME6QpjFPkKUxT5ClME6QpTBO
        j6UnQHSlJDtopSpDgKYxT5GmKUF1iiYsODFNTEoETk5OAlRUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVVVVA2FbUAInKjAtNFahs0t/8/hLgPT6R3vs+kl9
        7/pMgff6QnHX+lVIYPpaPkv6PFmk+kuB9/s9Z8LQJCw9SUxLSQROTk4CVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANVVVUDYVtOAicrMi41V6S3S4H4/UVu
        y/9LWIL/Pl6i/0Fw0f87bc7/cTU0/4MeJP9DbMn/TIL4/z1nxNQkLUBKTk1KBE5OTgJUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1VVVQNfXFkCKisoLjNL
        drdEctX9QViT/4k2Kf9nJlH/aUxr/3AjO/+ZDhb/vQsM/01drf9Lg/n/PWfE1CQtQEpPTUsETk5OAlRU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVVVVA1NS
        ZQIxMiQug4UOt660H/1+iz3/aU8S/6INiP+0D23/3wMy/7UhBf95Lin/QWCz/0qB/P89aMbUJC1ASk5N
        SgROTk4CVFRUA1RUVgNTVVgCU1VZAlNVWQJTVVkCU1VZAlNVWQJTVVkCU1VZAlNVWAJUVFQDVFRUA1RU
        VgNUVlkCR0p6AjIyIy2oqAW2//8A/fz8AP/b3wL/kFho/8oEy/+1A63/n4Ag/6WxGf93ilj/W3iI/zpa
        k9QlKzdKT05LBE5OTgJVVFIEV1NNDFdTSxdXU0sZV1NLGFdTSxhXU0sYV1NLGFdTSxhXU0sYV1NLFFZU
        TwhUU1EEVlJLDFdTTBdWUk0YPDstQKWlB73//wH9//8B////AP/BvBH/lSqF/7cMuv+KIWv/wI8y//Hv
        Af/s6wL/nJ4N1DM0H0pKSk8ETE1PAldUTwhTTUFAUko7h1NGN5RSSTqTUkg6k1NGN5NSSjuTU0c4k1JH
        OJNSSjxzVVBFI1hWUwhTTUFAUko7h1NHN5RGPjOml5YK4P//Af7//wH/2d0J/5mbZP+cnJf/qZuq/3JC
        Xf+MQWT/lYU2/+foBP/OzgLUQUEYSkpKUARLTFACWFZRC1NLPWpNUEHhPXdw90lYS/ZHXVH2PXdw9k1P
        QPZAbmX2Qmpg9lBIOb9VT0U5WVdTDFNLPmpNT0HhPXdw90BSSviPjAv8//8A////AP+OuC7/H6ir/2qq
        q/+vr7H/nqB3/7GxDf+Mijb/2toI/8/PAtRCQhhKSkpRBEtMUAJYVlELVEk7bkhbT+kgvMP/QHBo/zt7
        df8gvcT/SVlN/yqmqP8tnJz/UUg501ROQ2ZVUEZCU0o8j0lZTe4hvMP/NWxp/4+KCf///wD///8A/5y+
        Jf8E29r/FNXX/46jqP+Dgkr/5+gA//b2AP///wH/zMwD1EJCGEpKSlAESkxQAlhWUAtTSz5uT0s86UlY
        S/9OTT//TU9A/0lYS/9PSjv/S1VH/0tURv9QSDjyUUg501BIOchQSDjeT0o7+kpYTP9FRjz/j40M////
        AP///wH/0tIG/2WmS/8/pIr/UYFS/7W0Cf///wH///8B////Af/NzQPUQUEZSklJUARKTFACWFZQC1NL
        Pm5LUj/pMoRj/y6Naf8ujGn/Lo1p/y2Oa/8tjmr/LY5q/y6Nav8ujWn/Lo1q/y2Oa/8tjmv/Lo5q/yiC
        ZP9vhRj/0NID/83SBf/Kzwf/xMcD/6WrCP+wugn/zdAE/87RBP/O0QT/0tIC/KysA8Y7OxlCSkpOBEtM
        UAJYVlELVEo9bkhZROkerYH/F7uL/xi5if8koXj/KJVw/yiVcP8ol3H/Hq2A/xe7i/8bs4X/J5pz/yiV
        cP8olXD/Jphy/x2QZv8hlGL/KYRW/zJwSP8zb0f/NXFH/y59Uf8ikmH/IZRi/yaKW/9ETi/uRkEkjDs7
        KiBJSkwDS0xQAlhWUQtUSj1uSFhE6R6tgP8Xu4v/Jpt0/05TP/9fVj3/Ylg+/1pRO/9AaFD/G7OF/zSA
        YP9WTzv/YVc+/2FXPv9UTzz/MYdm/xu0hv9CZk//W1Q+/2FaQP9fVz//TFdD/yOjev8XvY3/Hq2C/0lY
        ROVTST1nVFJOCkhKTAJLTVACWFZRC1NLPmdMUD7iKpZw/xe7i/8ti2n/YVQ8/8WjVf/XsVr/oYVM/0lV
        Qv8gqn7/PGpS/4RuRP/Ur1n/0q1Z/3tnQf84clf/H6t//0tWQv+pjE7/17Fa/8SiVf9fVT3/KpJu/xe7
        i/8rkm7+TU893VNLPl9YVlIJTE1QAk1NTwJWVFAGVU9FOVNJPKRGW0bwHqyA/yyMav9kVz3/2LJa/+3C
        X/+ukE//SVZC/yCpfv87alL/jXVG/+rAX//nvl7/gmxD/zdzWP8fq3//S1dC/7eXUf/twl//17Fa/2JX
        Pv8pk27/IKl+/0hYRO5SSDqeU05CM1dWUwVNTU4CTk5OAlRVVgNYVU8MVU9EXE9LO9onmnP/LI5r/15R
        O/+rjk7/uZlS/493Rv9JVkL/H6t//zxsU/95ZED/t5dR/7WWUf9yXz7/OHNY/x+rgP9LVkL/lXxI/7mZ
        Uv+qjU7/XFI8/ymVcP8rkm7/UEk51VRPRFRYVVAKVFRVA05OTgJNTk8CVlRRBFVQRyJTSj2ATFA+5iSi
        ef8hpnz/RGFK/0xWQv9MV0L/S1ZC/zh5W/8Ztof/LY5q/0lYQ/9MV0L/TFdC/0hZRP8rk27/GrWG/zp0
        WP9LVkL/TFdC/0xWQv9DY0z/IKp+/yacdf9NTTziVExBeVZRSR5VU1AETk5PAkxNTwJYVlEJU0w/W09K
        OtM1fl/8GraH/xi5if8dsIP/H6p//x+qf/8fq4D/GrWG/xi5if8Zt4j/Hq2B/x+qf/8fqn//Hq2B/xm4
        iP8YuYn/G7SG/x+rf/8fqn//H6p//xyxg/8YuYn/GrWG/zh4W/tPSjrNU0w/U1hWUwhMTU8CS0xQAlhW
        UQtTSz5sTU085D1uVPo5dVn5OnVY+Tl1Wfk5dln5OXZZ+Tl2Wfk6dVn5OnVY+Tp1WPk5dln5OXZZ+Tl2
        Wfk5dln5OnVY+Tp1WPk6dVn5OXZZ+Tl2Wfk5dln5OXVZ+Tp1WPk5dVn5PW1T+k5MO99SSz5jWFZRCUxN
        UAJMTU8CV1VQCFNNQEZRSTuUUkc5olJGOKFSRjihUkY4oVJGOKFSRjihUkY4oVJGOKFSRjihUkY4oVJG
        OKFSRjihUkY4oVJGOKFSRjihUkY4oVJGOKFSRjihUkY4oVJGOKFSRjihUkY4oVJGOKFSRzmiUUk7kVJM
        P0FXVlIHTE1PAk5OTgJVVFMEVVFID1ZSSR1WUkggVlFIIFZRSCBWUkkgVlJJIFZSSCBWUUggVlFIIFZS
        SSBWUkkgVlJIIFZRSCBWUUggVlJJIFZSSSBWUkggVlFIIFZRSCBWUkkgVlJJIFZSSCBWUUggVlFIIFZS
        SSBWUkkdVVJJDlVUUwROTk4CTk5OAlRUVANUVVcDU1VZAlNWWgJUVloCVFZbAlRWWgJTVVoCU1ZaAlRW
        WgJUVlsCVFZaAlNVWgJTVloCVFZaAlRWWwJUVloCU1VaAlNWWgJUVloCVFZbAlRWWgJTVVoCU1ZaAlRW
        WgJUVlsCVFZaAlNVWQJUVVYDVFRUA05OTgJOTk4CVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDTk5OAk5OTgJUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANOTk4CTk5OAlRUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA05OTgJOTk4CVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDTk5OAk5O
        TgJUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANOTk4CTk5OAlRUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RUVANUVFQDVFRUA1RU
        VANUVFQDVFRUA05OTgJJSUkCTk5OAk5OTgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5O
        TgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5OTgJOTk4CTk5OAk5O
        TgJOTk4CTk5OAk5OTgJOTk4CSUlJAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>